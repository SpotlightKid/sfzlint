count	The number of times the sample will be played.	integer	0	0 to 4294967296	SFZv1
delay	Region delay time.	float	0	0 to 100 seconds	SFZv1
delay_ccN	Region delay time after MIDI continuous controller N messages are received. If the region receives a note-off message before delay time, the region won't play.	float	0	0 to 100 seconds	SFZv1
delay_random	Region random delay time.	float	0	0 to 100 seconds	SFZv1
end	The endpoint of the sample.	integer	0	0 to 4294967296 sample units	SFZv1
loop_mode	Allows playing samples with loops defined in the unlooped mode.	string	no_loop for samples without a loop defined, loop_continuous for samples with defined loop(s).	no_loop, one_shot, loop_continuous, loop_sustain	SFZv1
loop_start	The loop start point, in samples.	integer	0	0 to 4294967296	SFZv1
loop_end	The loop end point, in samples.	integer	0	0 to 4294967296	SFZv1
offset	The offset used to play the sample.	integer	0	0 to 4294967296 sample units	SFZv1
offset_ccN	The offset used to play the sample according to last position of MIDI continuous controller N.	integer	0	0 to 4294967296 sample units	SFZv1
offset_random	Random offset added to the region offset.	integer	0	0 to 4294967296 sample units	SFZv1
sample	Defines which sample file the region will play.	string	N/A	N/A	SFZv1
sync_beats	Region playing synchronization to host position.	float	0	0 to 32 beats	SFZv1
sync_offset	Region playing synchronization to host position offset.	float	0	0 to 32 beats	SFZv1
group	Exclusive group number for this region.	integer	0	0 to 4294967296	SFZv1
off_by	Region off group.	integer	0	0 to 4294967296	SFZv1
off_mode	Region off mode.	string	fast	fast, normal, time	SFZv1
output	The stereo output number for this region.	integer	0	0 to 1024	SFZv1
key	Equivalent to using lokey, hikey and pitch_keycenter and setting them all to the same note value.	integer	N/A	0 to 127	SFZv1
lokey	Determine the low boundary of a certain region.	integer	0	0 to 127	SFZv1
hikey	Determine the high boundary of a certain region.	integer	127	0 to 127	SFZv1
lovel	If a note with velocity value equal to or higher than lovel AND equal to or lower than hivel is played, the region will play.	integer	0	0 to 127	SFZv1
hivel	If a note with velocity value equal to or higher than lovel AND equal to or lower than hivel is played, the region will play.	integer	127	0 to 127	SFZv1
lochan	If incoming notes have a MIDI channel between lochan and hichan, the region will play.	integer	1	1 to 16	SFZv1
hichan	If incoming notes have a MIDI channel between lochan and hichan, the region will play.	integer	16	1 to 16	SFZv1
loccN	Defines the range of the last MIDI controller N required for the region to play.	integer	0	0 to 127	SFZv1
hiccN	Defines the range of the last MIDI controller N required for the region to play.	integer	127	0 to 127	SFZv1
lobend	Defines the range of the last Pitch Bend message required for the region to play.	integer	-8192	-8192 to 8192	SFZv1
hibend	Defines the range of the last Pitch Bend message required for the region to play.	integer	8192	-8192 to 8192	SFZv1
sw_lokey	Defines the range of the keyboard to be used as trigger selectors for the sw_last opcode.	integer	0	0 to 127	SFZv1
sw_hikey	Defines the range of the keyboard to be used as trigger selectors for the sw_last opcode.	integer	127	0 to 127	SFZv1
sw_last	Enables the region to play if the last key pressed in the range specified by sw_lokey and sw_hikey is equal to the sw_last value.	integer	0	0 to 127	SFZv1
sw_down	Enables the region to play if the key equal to sw_down value is depressed. Key has to be in the range specified by sw_lokey and sw_hikey.	integer	0	0 to 127	SFZv1
sw_up	Enables the region to play if the key equal to sw_up value is not depressed.	integer	0	0 to 127	SFZv1
sw_previous	Previous note value. The region will play if last note-on message was equal to sw_previous value.	integer	N/A	0 to 127	SFZv1
sw_vel	Allows overriding the velocity for the region with the velocity of the previous note.	string	current	current, previous	SFZv1
lobpm	Host tempo value.	float	0	0 to 500 bpm	SFZv1
hibpm	Host tempo value.	float	500	0 to 500 bpm	SFZv1
lochanaft	Defines the range of last Channel Aftertouch message required for the region to play.	integer	0	0 to 127	SFZv1
hichanaft	Defines the range of last Channel Aftertouch message required for the region to play.	integer	127	0 to 127	SFZv1
lopolyaft	Defines the range of last Polyphonic Aftertouch message required for the region to play.	integer	0	0 to 127	SFZv1
hipolyaft	Defines the range of last Polyphonic Aftertouch message required for the region to play.	integer	127	0 to 127	SFZv1
lorand	The region will play if the random number is equal to or higher than lorand, and lower than hirand.	float	0	0 to 1	SFZv1
hirand	The region will play if the random number is equal to or higher than lorand, and lower than hirand.	float	1	0 to 1	SFZv1
seq_length	Sequence length, used together with seq_position to use samples as round robins.	integer	1	1 to 100	SFZv1
seq_position	Sequence position. The region will play if the internal sequence counter is equal to seq_position.	integer	1	1 to 100	SFZv1
trigger	Sets the trigger which will be used for the sample to play.	string	attack	attack, release, first, legato, release_key	SFZv1
on_loccN	If a MIDI control message with a value between on_loccN and on_hiccN is received, the region will play. Default value is -1, it means unassigned.	integer	-1	0 to 127	SFZv1
on_hiccN	If a MIDI control message with a value between on_loccN and on_hiccN is received, the region will play. Default value is -1, it means unassigned.	integer	-1	0 to 127	SFZv1
pan	The panoramic position for the region.	float	0	-100 to 100 %	SFZv1
position	Only operational for stereo samples, position defines the position in the stereo field of a stereo signal, after channel mixing as defined in the width opcode.	float	0	-100 to 100 %	SFZv1
volume	The volume for the region, in decibels.	float	0	-144 to 6 dB	SFZv1
gain_ccN	Gain applied on MIDI control N, in decibels.	float	0	-144 to 48 dB	SFZv1
width	Only operational for stereo samples, width defines the amount of channel mixing applied to play the sample.	float	0	-100 to 100 %	SFZv1
amp_keycenter	Center key for amplifier keyboard tracking. In this key, the amplifier keyboard tracking will have no effect.	integer	60	0 to 127	SFZv1
amp_keytrack	Amplifier keyboard tracking (change in amplitude per key) in decibels.	float	0	-96 to 12 dB	SFZv1
amp_veltrack	Amplifier velocity tracking, represents how much the amplitude changes with incoming note velocity.	float	100	-100 to 100 %	SFZv1
amp_velcurve_N	User-defined amplifier velocity curve.	float	Standard curve (see amp_veltrack)	0 to 1	SFZv1
amp_random	Random volume for the region, in decibels.	float	0	0 to 24 dB	SFZv1
rt_decay	Applies only to regions that triggered through trigger=release. The volume decrease (in decibels) per seconds after the note has been attacked.	float	0	0 to 200 dB	SFZv1
xf_cccurve	MIDI controllers crossfade curve for the region.	string	power	gain, power	SFZv1
xf_keycurve	Keyboard crossfade curve for the region.	string	power	gain, power	SFZv1
xf_velcurve	Velocity crossfade curve for the region.	string	power	gain, power	SFZv1
xfin_loccN	Fade in control based on MIDI CC.	integer	0	0 to 127	SFZv1
xfin_hiccN	Fade in control based on MIDI CC.	integer	0	0 to 127	SFZv1
xfout_loccN	Fade out control based on MIDI CC.	integer	0	0 to 127	SFZv1
xfout_hiccN	Fade out control based on MIDI CC.	integer	0	0 to 127	SFZv1
xfin_lokey	Fade in control based on MIDI note (keyboard position).	integer	0	0 to 127	SFZv1
xfin_hikey	Fade in control based on MIDI note (keyboard position).	integer	0	0 to 127	SFZv1
xfout_lokey	Fade out control based on MIDI note number (keyboard position).	integer	127	0 to 127	SFZv1
xfout_hikey	Fade out control based on MIDI note number (keyboard position).	integer	127	0 to 127	SFZv1
xfin_lovel	Fade in control based on velocity.	integer	0	0 to 127	SFZv1
xfin_hivel	Fade in control based on velocity.	integer	0	0 to 127	SFZv1
xfout_lovel	Fade out control, based on velocity.	integer	127	0 to 127	SFZv1
xfout_hivel	Fade out control, based on velocity.	integer	127	0 to 127	SFZv1
eqN_bw	Bandwidth of the equalizer band, in octaves.	float	1	0.001 to 4 octaves	SFZv1
eqN_bwccX		float	0	-4 to 4 octaves	SFZv1
eqN_freq	Frequency of the equalizer band, in Hertz.	float	eq1_freq=50 eq1_freq=500 eq1_freq=5000	0 to 30000 Hz	SFZv1
eqN_freqccX		float	0	-30000 to 30000 Hz	SFZv1
eqN_vel2freq	Frequency change of the equalizer band with MIDI velocity, in Hertz.	float	0	-30000 to 30000 Hz	SFZv1
eqN_gain	Gain of the equalizer band, in decibels.	float	0	-96 to 24 dB	SFZv1
eqN_gainccX		float	0	-96 to 24 dB	SFZv1
eqN_vel2gain	Gain change of the equalizer band with MIDI velocity, in decibels.	float	0	-96 to 24 dB	SFZv1
cutoff	Sets the cutoff frequency (Hz) of the filters.	float	filter disabled	0 to SampleRate / 2 Hz	SFZv1
cutoff_ccN	The variation in the cutoff frequency when MIDI continuous controller N is received.	integer	0	-9600 to 9600 cents	SFZv1
cutoff_chanaft	The variation in the cutoff frequency when MIDI channel aftertouch messages are received, in cents.	integer	0	-9600 to 9600 cents	SFZv1
cutoff_polyaft	The variation in the cutoff frequency when MIDI polyphonic aftertouch messages are received, in cents.	integer	0	-9600 to 9600 cents	SFZv1
fil_keytrack	Filter keyboard tracking (change on cutoff for each key) in cents.	integer	0	0 to 1200 cents	SFZv1
fil_keycenter	Center key for filter keyboard tracking.	integer	60	0 to 127	SFZv1
fil_random	Random value added to the filter cutoff for the region, in cents.	integer	0	0 to 9600 cents	SFZv1
fil_type	Filter type.	string	lpf_2p	lpf_1p, hpf_1p, lpf_2p, hpf_2p, bpf_2p, brf_2p	SFZv1
fil_veltrack	Filter velocity tracking, the amount by which the cutoff changes with incoming note velocity, in cents.	integer	0	-9600 to 9600 cents	SFZv1
resonance	The filter cutoff resonance value, in decibels.	float	0	0 to 40 dB	SFZv1
bend_up	Pitch bend range when Bend Wheel or Joystick is moved up, in cents.	integer	200	-9600 to 9600 cents	SFZv1
bend_down	Pitch bend range when Bend Wheel or Joystick is moved down, in cents.	integer	-200	-9600 to 9600 cents	SFZv1
bend_step	Pitch bend step, in cents.	integer	1	1 to 1200 cents	SFZv1
pitch_keycenter	Root key for the sample.	integer	60	-127 to 127	SFZv1
pitch_keytrack	Within the region, this value defines how much the pitch changes with every note.	integer	100	-1200 to 1200	SFZv1
pitch_random	Random tuning for the region, in cents.	integer	0	0 to 9600 cents	SFZv1
pitch_veltrack	Pitch velocity tracking, represents how much the pitch changes with incoming note velocity, in cents.	integer	0	-9600 to 9600 cents	SFZv1
transpose	The transposition value for this region which will be applied to the sample.	integer	0	-127 to 127	SFZv1
tune	The fine tuning for the sample, in cents.	integer	0	-100 to 100 cents	SFZv1
ampeg_attack	EG attack time.	float	0	0 to 100 seconds	SFZv1
ampeg_attackccN		float	0	-100 to 100 seconds	SFZv1
ampeg_vel2attack	Velocity effect on EG attack time.	float	0	-100 to 100 seconds	SFZv1
ampeg_decay	EG decay time.	float	0	0 to 100 seconds	SFZv1
ampeg_decayccN		float	0	-100 to 100	SFZv1
ampeg_vel2decay	Velocity effect on pitch EG decay time.	float	0	-100 to 100 seconds	SFZv1
ampeg_delay	EG delay time.	float	0	0 to 100 seconds	SFZv1
ampeg_delayccN		float	0	-100 to 100	SFZv1
ampeg_vel2delay	Velocity effect on EG delay time.	float	0	-100 to 100 seconds	SFZv1
ampeg_hold	EG hold time.	float	0	0 to 100 seconds	SFZv1
ampeg_holdccN		float	0	-100 to 100	SFZv1
ampeg_vel2hold	Velocity effect on EG hold time.	float	0	-100 to 100 seconds	SFZv1
ampeg_release	EG release time (after note release).	float	0	0 to 100 seconds	SFZv1
ampeg_releaseccN		float	0	-100 to 100 seconds	SFZv1
ampeg_vel2release	Velocity effect on EG release time.	float	0	-100 to 100 seconds	SFZv1
ampeg_sustain	EG sustain level, in percentage.	float	100	0 to 100 %	SFZv1
ampeg_sustainccN		float	0	-100 to 100 %	SFZv1
ampeg_vel2sustain	Velocity effect on EG sustain level, in percentage.	float	0	-100 to 100 %	SFZv1
ampeg_start	Envelope start level, in percentage.	float	0	0 to 100 %	SFZv1
ampeg_startccN		float	0	-100 to 100 seconds	SFZv1
fileg_attack	EG attack time.	float	0	0 to 100 seconds	SFZv1
fileg_vel2attack	Velocity effect on EG attack time.	float	0	-100 to 100 seconds	SFZv1
fileg_decay	EG decay time.	float	0	0 to 100 seconds	SFZv1
fileg_vel2decay	Velocity effect on filter EG decay time.	float	0	-100 to 100 seconds	SFZv1
fileg_delay	EG delay time.	float	0	0 to 100 seconds	SFZv1
fileg_vel2delay	Velocity effect on filter EG delay time.	float	0	-100 to 100 seconds	SFZv1
fileg_depth	Envelope depth.	integer	0	-12000 to 12000 cents	SFZv1
fileg_vel2depth	Velocity effect on EG depth, in cents for pitch or filter cutoff.	integer	0	-12000 to 12000 cents	SFZv1
fileg_hold	EG hold time.	float	0	0 to 100 seconds	SFZv1
fileg_vel2hold	Velocity effect on EG hold time.	float	0	-100 to 100 seconds	SFZv1
fileg_release	EG release time (after note release).	float	0	0 to 100 seconds	SFZv1
fileg_vel2release	Velocity effect on EG release time.	float	0	-100 to 100 seconds	SFZv1
fileg_start	Envelope start level, in percentage.	float	0	0 to 100 %	SFZv1
fileg_sustain	EG sustain level, in percentage.	float	0	0 to 100 %	SFZv1
fileg_vel2sustain	Velocity effect on EG sustain level, in percentage.	float	0	-100 to 100 %	SFZv1
pitcheg_attack	EG attack time.	float	0	0 to 100 seconds	SFZv1
pitcheg_vel2attack	Velocity effect on EG attack time.	float	0	-100 to 100 seconds	SFZv1
pitcheg_decay	EG decay time.	float	0	0 to 100 seconds	SFZv1
pitcheg_vel2decay	Velocity effect on filter EG decay time.	float	0	-100 to 100 seconds	SFZv1
pitcheg_delay	EG delay time.	float	0	0 to 100 seconds	SFZv1
pitcheg_vel2delay	Velocity effect on filter EG delay time.	float	0	-100 to 100 seconds	SFZv1
pitcheg_depth	Envelope depth.	integer	0	-12000 to 12000 cents	SFZv1
pitcheg_vel2depth	Velocity effect on EG depth, in cents for pitch or filter cutoff.	integer	0	-12000 to 12000 cents	SFZv1
pitcheg_hold	EG hold time.	float	0	0 to 100 seconds	SFZv1
pitcheg_vel2hold	Velocity effect on EG hold time.	float	0	-100 to 100 seconds	SFZv1
pitcheg_release	EG release time (after note release).	float	0	0 to 100 seconds	SFZv1
pitcheg_vel2release	Velocity effect on EG release time.	float	0	-100 to 100 seconds	SFZv1
pitcheg_start	Envelope start level, in percentage.	float	0	0 to 100 %	SFZv1
pitcheg_sustain	EG sustain level, in percentage.	float	0	0 to 100 %	SFZv1
pitcheg_vel2sustain	Velocity effect on EG sustain level, in percentage.	float	0	-100 to 100 %	SFZv1
amplfo_delay	The time before the LFO starts oscillating.	float	0	0 to 100 seconds	SFZv1
amplfo_depth	LFO depth.	float	0	-10 to 10 dB	SFZv1
amplfo_depthccN		float	0	-10 to 10 dB	SFZv1
amplfo_depthchanaft	LFO depth when channel aftertouch MIDI messages are received.	float	0	-10 to 10 dB	SFZv1
amplfo_depthpolyaft	LFO depth when polyphonic aftertouch MIDI messages are received.	float	0	-10 to 10 dB	SFZv1
amplfo_fade	LFO fade-in effect time.	float	0	0 to 100 seconds	SFZv1
amplfo_freq	LFO frequency, in hertz.	float	0	0 to 20 Hz	SFZv1
amplfo_freqccN		float	0	-200 to 200 Hz	SFZv1
amplfo_freqchanaft	LFO frequency change when channel aftertouch MIDI messages are received, in Hertz.	float	0	-200 to 200 Hz	SFZv1
amplfo_freqpolyaft	LFO frequency change when polyphonic aftertouch MIDI messages are received, in Hertz.	float	0	-200 to 200 Hz	SFZv1
fillfo_delay	The time before the LFO starts oscillating.	float	0	0 to 100 seconds	SFZv1
fillfo_depth	LFO depth.	float	0	-1200 to 1200 cents	SFZv1
fillfo_depthccN		float	0	-1200 to 1200 cents	SFZv1
fillfo_depthchanaft	LFO depth when channel aftertouch MIDI messages are received.	float	0	-1200 to 1200 cents	SFZv1
fillfo_depthpolyaft	LFO depth when polyphonic aftertouch MIDI messages are received.	float	0	-1200 to 1200 cents	SFZv1
fillfo_fade	LFO fade-in effect time.	float	0	0 to 100 seconds	SFZv1
fillfo_freq	LFO frequency, in hertz.	float	0	0 to 20 Hz	SFZv1
fillfo_freqccN		float	0	-200 to 200 Hz	SFZv1
fillfo_freqchanaft	LFO frequency change when channel aftertouch MIDI messages are received, in Hertz.	float	0	-200 to 200 Hz	SFZv1
fillfo_freqpolyaft	LFO frequency change when polyphonic aftertouch MIDI messages are received, in Hertz.	float	0	-200 to 200 Hz	SFZv1
pitchlfo_delay	The time before the LFO starts oscillating.	float	0	0 to 100 seconds	SFZv1
pitchlfo_depth	LFO depth.	float	0	-1200 to 1200 cents	SFZv1
pitchlfo_depthccN		float	0	-1200 to 1200 cents	SFZv1
pitchlfo_depthchanaft	LFO depth when channel aftertouch MIDI messages are received.	float	0	-1200 to 1200 cents	SFZv1
pitchlfo_depthpolyaft	LFO depth when polyphonic aftertouch MIDI messages are received.	float	0	-1200 to 1200 cents	SFZv1
pitchlfo_fade	LFO fade-in effect time.	float	0	0 to 100 seconds	SFZv1
pitchlfo_freq	LFO frequency, in hertz.	float	0	0 to 20 Hz	SFZv1
pitchlfo_freqccN		float	0	-200 to 200 Hz	SFZv1
pitchlfo_freqchanaft	LFO frequency change when channel aftertouch MIDI messages are received, in Hertz.	float	0	-200 to 200 Hz	SFZv1
pitchlfo_freqpolyaft	LFO frequency change when polyphonic aftertouch MIDI messages are received, in Hertz.	float	0	-200 to 200 Hz	SFZv1
effect1	Level of effect1 send, in percentage (reverb in Cakewalk sfz).	integer	0	0 to 100 %	SFZv1
effect2	Level of effect2 send, in percentage (chorus in Cakewalk sfz).	integer	0	0 to 100 %	SFZv1
delay_samples	Allows the region playback to be postponed for the specified time, measured in samples (and therefore dependent on current sample rate).	integer	N/A	N/A	SFZv2
delay_samples_onccN		integer	N/A	N/A	SFZv2
delay_beats	Delays the start of the region until a certain amount of musical beats are passed.	float	N/A	N/A	SFZv2
stop_beats	Stops a region after a certain amount of beats have played.	float	N/A	N/A	SFZv2
loop_crossfade	Loop cross fade.	float	N/A	N/A	SFZv2
md5	Calculates the MD5 digital fingerprint hash of a sample file, represented as a sequence of 32 hexadecimal digits.	string	null	N/A	SFZv2
reverse_loccN	If MIDI CC X is between reverse_loccN and reverse_hiccN, the region plays reversed.	integer	N/A	0 to 127	SFZv2
reverse_hiccN	If MIDI CC X is between reverse_loccN and reverse_hiccN, the region plays reversed.	integer	N/A	0 to 127	SFZv2
waveguide	Enables waveguide synthesis for the region.	string	N/A	on, off	SFZv2
#define	Creates a variable and gives it a value.	string	N/A	N/A	SFZv2
default_path	Relative path for samples.	string	N/A	N/A	SFZv2
note_offset	Tells SFZ to shift all incoming MIDI data by the specified number of notes.	integer	N/A	N/A	SFZv2
octave_offset	Shifts all incoming MIDI data by the specified octave.	integer	N/A	N/A	SFZv2
set_ccN	Sets a default initial value for MIDI CC number X, when the instrument is initially loaded.	integer	N/A	0 to 127	SFZv2
polyphony	Polyphony voice limit for a group.	integer	N/A	N/A	SFZv2
rt_dead	Controls whether a release sample should play if its sustain sample has ended, or not.	string	off	on, off	SFZv2
sustain_sw	Turns the sustain switch on or off.	string	N/A	on, off	SFZv2
sostenuto_sw	Turns the sostenuto switch on or off.	string	N/A	on, off	SFZv2
loprog	The region plays when the MIDI program number is between loprog and hiprog.	integer	0	0 to 127	SFZv2
hiprog	The region plays when the MIDI program number is between loprog and hiprog.	integer	127	0 to 127	SFZv2
lotimer	Region plays if timer is between lotimer and hitimer.	float	N/A	N/A	SFZv2
hitimer	Region plays if timer is between lotimer and hitimer.	float	N/A	N/A	SFZv2
start_loccN	If a MIDI control message with a value between start_loccN and start_hiccN is received, the region will play. Alias for on_loccN. Default value is -1, it means unassigned.	integer	-1	0 to 127	SFZv2
start_hiccN	If a MIDI control message with a value between start_loccN and start_hiccN is received, the region will play. Alias for on_hiccN. Default value is -1, it means unassigned.	integer	-1	0 to 127	SFZv2
stop_loccN	If a MIDI control message with a value between stop_loccN and stop_hiccN is received, the region will stop playing. Default value is -1, it means unassigned.	integer	-1	0 to 127	SFZv2
stop_hiccN	If a MIDI control message with a value between stop_loccN and stop_hiccN is received, the region will stop playing. Default value is -1, it means unassigned.	integer	-1	0 to 127	SFZv2
cutoff2	Same as cutoff, but used to specify the cutoff for the second filter.	float	filter disabled	0 to SampleRate / 2 Hz	SFZv2
cutoff2_onccN	The variation in the cutoff frequency when MIDI continuous controller N is received.	integer	0	-9600 to 9600 cents	SFZv2
cutoff2_curveccN		integer	0	-9600 to 9600 cents	SFZv2
cutoff2_smoothccN		integer	0	-9600 to 9600 cents	SFZv2
cutoff2_stepccN		integer	0	-9600 to 9600 cents	SFZv2
fil2_keycenter	Same as fil_keycenter, but used to specify the type for the second filter.	integer	60	0 to 127	SFZv2
fil2_keytrack	Same as fil_keytrack, but used to specify the type for the second filter.	integer	0	0 to 1200 cents	SFZv2
fil2_type	Same as fil_type, but used to specify the type for the second filter.	string	lpf_2p	lpf_1p, hpf_1p, lpf_2p, hpf_2p, bpf_2p, brf_2p, bpf_1p, brf_1p, apf_1p, lpf_2p_sv, hpf_2p_sv, bpf_2p_sv, brf_2p_sv, pkf_2p, lpf_4p, hpf_4p, lpf_6p, hpf_6p, comb, pink	SFZv2
fil2_veltrack	Same as fil_veltrack, but used to specify the type for the second filter.	integer	0	-9600 to 9600 cents	SFZv2
resonance2	Same as resonance, but used to specify the resonance for the second filter.	float	0	0 to 40 dB	SFZv2
resonance2_onccN		float	0	0 to 40 dB	SFZv2
resonance2_curveccN		float	0	0 to 40 dB	SFZv2
resonance2_smoothccN		float	0	0 to 40 dB	SFZv2
resonance2_stepccN		float	0	0 to 40 dB	SFZv2
bend_stepup	Pitch bend step, in cents, applied to upwards bends only.	integer	1	1 to 1200 cents	SFZv2
bend_stepdown	Pitch bend step, in cents, for downward pitch bends.	integer	1	1 to 1200 cents	SFZv2
egN_points			N/A	N/A	SFZv2
egN_timeX			N/A	N/A	SFZv2
egN_timeX_onccY			N/A	N/A	SFZv2
egN_levelX	Sets the envelope level at a specific point in envelope number N.	float	0	-1 to 1	SFZv2
egN_levelX_onccY		float	0	-1 to 1	SFZv2
egN_shapeX			N/A	N/A	SFZv2
egN_curveX	Instructs the player to use a curve shape defined under a curve header for the specified envelope segment.		N/A	N/A	SFZv2
egN_sustain			N/A	N/A	SFZv2
egN_loop			N/A	N/A	SFZv2
egN_loop_count			N/A	N/A	SFZv2
egN_volume			N/A	N/A	SFZv2
egN_volume_onccX			N/A	N/A	SFZv2
egN_amplitude			N/A	N/A	SFZv2
egN_amplitude_onccX			N/A	N/A	SFZv2
egN_pan			N/A	N/A	SFZv2
egN_pan_onccX			N/A	N/A	SFZv2
egN_width			N/A	N/A	SFZv2
egN_width_onccX			N/A	N/A	SFZv2
egN_pan_curve			N/A	N/A	SFZv2
egN_pan_curveccX			N/A	N/A	SFZv2
egN_freq_lfoX			N/A	N/A	SFZv2
egN_depth_lfoX			N/A	N/A	SFZv2
egN_depthadd_lfoX			N/A	N/A	SFZv2
egN_pitch			N/A	N/A	SFZv2
egN_pitch_onccX			N/A	N/A	SFZv2
egN_cutoff			N/A	N/A	SFZv2
egN_cutoff_onccX			N/A	N/A	SFZv2
egN_cutoff2			N/A	N/A	SFZv2
egN_cutoff2_onccX			N/A	N/A	SFZv2
egN_resonance			N/A	N/A	SFZv2
egN_resonance_onccX			N/A	N/A	SFZv2
egN_resonance2			N/A	N/A	SFZv2
egN_resonance2_onccX			N/A	N/A	SFZv2
egN_eqXfreq			N/A	N/A	SFZv2
egN_eqXfreq_onccY			N/A	N/A	SFZv2
egN_eqXbw			N/A	N/A	SFZv2
egN_eqXbw_onccY			N/A	N/A	SFZv2
egN_eqXgain			N/A	N/A	SFZv2
egN_eqXgain_onccY			N/A	N/A	SFZv2
lfoN_freq	The base frequency of LFO number N, in Hertz.	integer	N/A	N/A	SFZv2
lfoN_freq_onccX			N/A	N/A	SFZv2
lfoN_freq_smoothccX			N/A	N/A	SFZv2
lfoN_freq_stepccX			N/A	N/A	SFZv2
lfoN_delay	Onset delay for LFO number N.	float	0	N/A	SFZv2
lfoN_delay_onccX			N/A	N/A	SFZv2
lfoN_fade	Fade-in time for LFO number N.	float	N/A	N/A	SFZv2
lfoN_fade_onccX		float	N/A	N/A	SFZv2
lfoN_phase	Initial phase shift for LFO number N.	float	0	0 to 1	SFZv2
lfoN_phase_onccX			N/A	N/A	SFZv2
lfoN_count	Number of LFO repetitions for LFO N before the LFO stops.	integer	N/A	N/A	SFZv2
lfoN_wave	LFO waveform selection.	integer	1	N/A	SFZv2
lfoN_steps			N/A	N/A	SFZv2
lfoN_stepX			N/A	N/A	SFZv2
lfoN_smooth			N/A	N/A	SFZv2
lfoN_smooth_onccX			N/A	N/A	SFZv2
lfoN_volume			N/A	N/A	SFZv2
lfoN_volume_onccX			N/A	N/A	SFZv2
lfoN_volume_smoothccX			N/A	N/A	SFZv2
lfoN_volume_stepccX			N/A	N/A	SFZv2
lfoN_amplitude			N/A	N/A	SFZv2
lfoN_amplitude_onccX			N/A	N/A	SFZv2
lfoN_amplitude_smoothccX			N/A	N/A	SFZv2
lfoN_amplitude_stepccX			N/A	N/A	SFZv2
lfoN_pan			N/A	N/A	SFZv2
lfoN_pan_onccX			N/A	N/A	SFZv2
lfoN_pan_smoothccX			N/A	N/A	SFZv2
lfoN_pan_stepccX			N/A	N/A	SFZv2
lfoN_width			N/A	N/A	SFZv2
lfoN_width_onccX			N/A	N/A	SFZv2
lfoN_width_smoothccX			N/A	N/A	SFZv2
lfoN_width_stepccX			N/A	N/A	SFZv2
lfoN_freq_lfoX			N/A	N/A	SFZv2
lfoN_depth_lfoX			N/A	N/A	SFZv2
lfoN_depthadd_lfoX			N/A	N/A	SFZv2
lfoN_pitch			N/A	N/A	SFZv2
lfoN_pitch_onccX			N/A	N/A	SFZv2
lfoN_pitch_smoothccX			N/A	N/A	SFZv2
lfoN_pitch_stepccX			N/A	N/A	SFZv2
lfoN_cutoff			N/A	N/A	SFZv2
lfoN_cutoff_onccX			N/A	N/A	SFZv2
lfoN_cutoff_smoothccX			N/A	N/A	SFZv2
lfoN_cutoff_stepccX			N/A	N/A	SFZv2
lfoN_cutoff2			N/A	N/A	SFZv2
lfoN_cutoff2_onccX			N/A	N/A	SFZv2
lfoN_cutoff2_smoothccX			N/A	N/A	SFZv2
lfoN_cutoff2_stepccX			N/A	N/A	SFZv2
lfoN_resonance			N/A	N/A	SFZv2
lfoN_resonance_onccX			N/A	N/A	SFZv2
lfoN_resonance_smoothccX			N/A	N/A	SFZv2
lfoN_resonance_stepccX			N/A	N/A	SFZv2
lfoN_resonance2			N/A	N/A	SFZv2
lfoN_resonance2_onccX			N/A	N/A	SFZv2
lfoN_resonance2_smoothccX			N/A	N/A	SFZv2
lfoN_resonance2_stepccX			N/A	N/A	SFZv2
lfoN_eqXfreq			N/A	N/A	SFZv2
lfoN_eqXfreq_onccY			N/A	N/A	SFZv2
lfoN_eqXfreq_smoothccY			N/A	N/A	SFZv2
lfoN_eqXfreq_stepccY			N/A	N/A	SFZv2
lfoN_eqXbw			N/A	N/A	SFZv2
lfoN_eqXbw_onccY			N/A	N/A	SFZv2
lfoN_eqXbw_smoothccY			N/A	N/A	SFZv2
lfoN_eqXbw_stepccY			N/A	N/A	SFZv2
lfoN_eqXgain			N/A	N/A	SFZv2
lfoN_eqXgain_onccY			N/A	N/A	SFZv2
lfoN_eqXgain_smoothccY			N/A	N/A	SFZv2
lfoN_eqXgain_stepccY			N/A	N/A	SFZv2
curve_index	Curve ID definition.	integer	N/A	0 to N/A	SFZv2
vN		float	N/A	-1 to 1	SFZv2
direction	The direction in which the sample is to be played.	string	forward	forward, reverse	ARIA
loop_count	The number of times a loop will repeat.	integer	N/A	N/A	ARIA
loop_type	Defines the looping mode.	string	forward	forward, backward, alternate	ARIA
label_ccN	Creates a label for the MIDI CC.	string	N/A	N/A	ARIA
#include	Allows using SFZ files as building blocks for creating larger, more complex SFZ files.	string	N/A	N/A	ARIA
hint_*	Its a 'hint' to the ARIA engine, others implementations don't have to follow.		N/A	N/A	ARIA
*_mod	Determines whether a parameter is modulated by addition or multiplication.		N/A	N/A	ARIA
set_hdccN	Like set_ccN but with floating point MIDI CCs.	float	N/A	N/A	ARIA
sostenuto_lo	Sets the minimum point at which the sostenuto pedal (MIDI CC 66) is considered 'down'.	integer	1	0 to 127	ARIA
sostenuto_cc	Reassigns the sostenuto pedal CC to a non-standard value.	integer	66	0 to 127	ARIA
sustain_lo	Sets the minimum point at which the sustain pedal (MIDI CC 64) is considered 'down'.	integer	1	0 to 127	ARIA
sustain_cc	Reassigns the sustain pedal CC to a non-standard value.	integer	64	0 to 127	ARIA
sw_note_offset	Follows the same logic as SFZ 2.0’s note_offset but for key switches.	integer	N/A	N/A	ARIA
sw_octave_offset	Follows the same logic as SFZ 2.0’s octave_offset but for key switches.	integer	N/A	N/A	ARIA
global_label	An ARIA extension which sets what is displayed in the default info tab of Sforzando.	string	null	N/A	ARIA
master_label	An ARIA extension which sets what is displayed in the default info tab of Sforzando.	string	null	N/A	ARIA
group_label	An ARIA extension which sets what is displayed in the default info tab of Sforzando.	string	null	N/A	ARIA
region_label	An ARIA extension which sets what is displayed in the default info tab of Sforzando.	string	null	N/A	ARIA
note_polyphony	Polyphony limit for playing the same note repeatedly.	integer	N/A	N/A	ARIA
note_selfmask	Controls note-stealing behavior for a single pitch, when using note_polyphony.	string	on	on, off	ARIA
off_curve	When off_mode is set to time, this specifies the ‹curve› number for regions being muted by voice-stealing.	float	N/A	N/A	ARIA
off_shape	When off_mode is set to time, this specifies the curvature of the fadeout curve for regions being muted by voice-stealing.	float	N/A	N/A	ARIA
off_time	When off_mode is set to time, this specifies the fadeout time for regions being muted by voice-stealing.	float	N/A	N/A	ARIA
polyphony_group	An alias for group to reduce the confusion between the group opcode and the ‹group› header.	integer	0	0 to 4294967296	ARIA
lohdccN	Like loccN but with floating point MIDI CCs	float	N/A	N/A	ARIA
hihdccN	Like hiccN but with floating point MIDI CCs	float	N/A	N/A	ARIA
sw_default		integer	N/A	0 to 127	ARIA
sw_label		string	N/A	N/A	ARIA
sw_lolast	Like sw_last, but allowing a region to be triggered across a range of keyswitches.	integer	N/A	0 to 127	ARIA
sw_hilast	Like sw_last, but allowing a region to be triggered across a range of keyswitches.	integer	N/A	0 to 127	ARIA
varNN_curveccX	Specifies the ‹curve› number which MIDI CC X uses to modulate variable NN.		N/A	N/A	ARIA
varNN_mod	Specifies the method used to calculate variable number NN from MIDI CCs.	string	N/A	mult, add	ARIA
varNN_onccX	Specifies the method used to calculate variable number NN from MIDI CCs.	float	N/A	0 to 1	ARIA
varNN_target	Specifies the target for variable NN to modulate.	string	N/A	amplitude, cutoff, cutoff2, eqNbw, eqNfreq, eqNgain, pan, pitch, resonance, resonance2, volume, width	ARIA
phase	If invert is set, the region is played with inverted phase.	string	normal	normal, invert	ARIA
amplitude	Amplitude for the specified region in percentage of full amplitude.	integer	100	0 to 100 %	ARIA
amplitude_onccN		integer	N/A	0 to 100 %	ARIA
amplitude_curveccN			N/A	N/A	ARIA
amplitude_smoothccN			N/A	N/A	ARIA
global_amplitude	ARIA extension, like amplitude, but affecting everything when set under the ‹global› header.	integer	100	0 to 100 %	ARIA
master_amplitude	ARIA extension, like amplitude, but affecting everything when set under the ‹master› header.	integer	100	0 to 100 %	ARIA
group_amplitude	ARIA extension, like amplitude, but affecting everything when set under the ‹group› header.	integer	100	0 to 100 %	ARIA
pan_law	Sets the pan law to be used.	string	N/A	mma, balance	ARIA
pan_keycenter	Center key for pan keyboard tracking.	integer	60	0 to 127	ARIA
pan_keytrack	The amount by which the panning of a note is shifted with each key.	float	0	-100 to 100 %	ARIA
pan_veltrack	The effect of note velocity on panning.	float	0	-100 to 100 %	ARIA
global_volume	ARIA extension, like volume, but affecting everything when set under the ‹global› header.	float	0	-144 to 6 dB	ARIA
master_volume	ARIA extension, like volume, but affecting everything when set under the ‹master› header.	float	0	-144 to 6 dB	ARIA
group_volume	ARIA extension, like volume, but affecting everything when set under the ‹group› header.	float	0	-144 to 6 dB	ARIA
eqN_dynamic	Specifies when EQ is recalculated.	integer	0	0 to 1	ARIA
bend_smooth	Pitch bend smoothness. Adds “inertia” to pitch bends, so fast movements of the pitch bend wheel will have a delayed effect on the pitch change.	integer	0	N/A	ARIA
pitch	Pitch change in cents. ARIA alias for tune.	integer	0	-100 to 100 cents	ARIA
ampeg_attack_shape	Specifies the curvature of attack stage of the envelope.	float	0	N/A	ARIA
ampeg_decay_shape	Specifies the curvature of decay stage of the envelope.	float	0	N/A	ARIA
ampeg_decay_zero	Specifies how decay time is calculated.	integer	1	0 to 1	ARIA
ampeg_dynamic	Specifies when envelope durations are recalculated.	integer	0	0 to 1	ARIA
ampeg_release_shape	Specifies the curvature of release stage of the envelope.	float	0	N/A	ARIA
ampeg_release_zero	Specifies how release time is calculated.	integer	1	0 to 1	ARIA
fileg_attack_shape	Specifies the curvature of attack stage of the envelope.	float	0	N/A	ARIA
fileg_decay_shape	Specifies the curvature of decay stage of the envelope.	float	0	N/A	ARIA
fileg_decay_zero	Specifies how decay time is calculated.	integer	1	0 to 1	ARIA
fileg_release_shape	Specifies the curvature of release stage of the envelope.	float	0	N/A	ARIA
fileg_release_zero	Specifies how release time is calculated.	integer	1	0 to 1	ARIA
fileg_dynamic	Specifies when envelope durations are recalculated.	integer	0	0 to 1	ARIA
pitcheg_attack_shape	Specifies the curvature of attack stage of the envelope.	float	0	N/A	ARIA
pitcheg_decay_shape	Specifies the curvature of decay stage of the envelope.	float	0	N/A	ARIA
pitcheg_decay_zero	Specifies how decay time is calculated.	integer	1	0 to 1	ARIA
pitcheg_release_shape	Specifies the curvature of release stage of the envelope.	float	0	N/A	ARIA
pitcheg_release_zero	Specifies how release time is calculated.	integer	1	0 to 1	ARIA
pitcheg_dynamic	Specifies when envelope durations are recalculated.	integer	0	0 to 1	ARIA
lfoN_offsetX	Offset for LFO number N, can also be used with sub waveforms with lfoN_offset2, lfoN_offset3 etc.	float	N/A	N/A	ARIA
lfoN_ratio	Sets the ratio between the specified sub waveform and the main waveform.	float	N/A	N/A	ARIA
lfoN_scale	Sets the scaling between the specified sub waveform and the main waveform.	float	N/A	N/A	ARIA
lfoN_wave2	Select the waveform type used for the second waveform for LFO number N, with the same allowed values as lfoN_wave normally can use.	integer	1	N/A	ARIA
param_offset	Adds a number to the parameter numbers of built-in or vendor-specific effects.	integer	N/A	N/A	ARIA
vendor_specific	Defines vendor-specific effects, for example Garritan-specific stage depth effect in ARIA.	string	N/A	N/A	ARIA
script	Allows to load real-time instrument scripts for SFZ instruments.	string	N/A	N/A	Linux Sampler
